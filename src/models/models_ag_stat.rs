/* 
 * SendPost API
 *
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ModelsAgStat {
  #[serde(rename = "group")]
  group: Option<String>,
  #[serde(rename = "stat")]
  stat: Option<::models::ModelsStat>
}

impl ModelsAgStat {
  pub fn new() -> ModelsAgStat {
    ModelsAgStat {
      group: None,
      stat: None
    }
  }

  pub fn set_group(&mut self, group: String) {
    self.group = Some(group);
  }

  pub fn with_group(mut self, group: String) -> ModelsAgStat {
    self.group = Some(group);
    self
  }

  pub fn group(&self) -> Option<&String> {
    self.group.as_ref()
  }

  pub fn reset_group(&mut self) {
    self.group = None;
  }

  pub fn set_stat(&mut self, stat: ::models::ModelsStat) {
    self.stat = Some(stat);
  }

  pub fn with_stat(mut self, stat: ::models::ModelsStat) -> ModelsAgStat {
    self.stat = Some(stat);
    self
  }

  pub fn stat(&self) -> Option<&::models::ModelsStat> {
    self.stat.as_ref()
  }

  pub fn reset_stat(&mut self) {
    self.stat = None;
  }

}



