/* 
 * SendPost API
 *
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ModelsESubAccount {
  #[serde(rename = "name")]
  name: Option<String>,
  #[serde(rename = "labels")]
  labels: Option<Vec<String>>
}

impl ModelsESubAccount {
  pub fn new() -> ModelsESubAccount {
    ModelsESubAccount {
      name: None,
      labels: None
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> ModelsESubAccount {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

  pub fn set_labels(&mut self, labels: Vec<String>) {
    self.labels = Some(labels);
  }

  pub fn with_labels(mut self, labels: Vec<String>) -> ModelsESubAccount {
    self.labels = Some(labels);
    self
  }

  pub fn labels(&self) -> Option<&Vec<String>> {
    self.labels.as_ref()
  }

  pub fn reset_labels(&mut self) {
    self.labels = None;
  }

}



