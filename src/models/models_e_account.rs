/* 
 * SendPost API
 *
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ModelsEAccount {
  #[serde(rename = "email")]
  email: Option<String>,
  #[serde(rename = "signupMode")]
  signup_mode: Option<String>,
  #[serde(rename = "token")]
  token: Option<String>,
  #[serde(rename = "uid")]
  uid: Option<String>
}

impl ModelsEAccount {
  pub fn new() -> ModelsEAccount {
    ModelsEAccount {
      email: None,
      signup_mode: None,
      token: None,
      uid: None
    }
  }

  pub fn set_email(&mut self, email: String) {
    self.email = Some(email);
  }

  pub fn with_email(mut self, email: String) -> ModelsEAccount {
    self.email = Some(email);
    self
  }

  pub fn email(&self) -> Option<&String> {
    self.email.as_ref()
  }

  pub fn reset_email(&mut self) {
    self.email = None;
  }

  pub fn set_signup_mode(&mut self, signup_mode: String) {
    self.signup_mode = Some(signup_mode);
  }

  pub fn with_signup_mode(mut self, signup_mode: String) -> ModelsEAccount {
    self.signup_mode = Some(signup_mode);
    self
  }

  pub fn signup_mode(&self) -> Option<&String> {
    self.signup_mode.as_ref()
  }

  pub fn reset_signup_mode(&mut self) {
    self.signup_mode = None;
  }

  pub fn set_token(&mut self, token: String) {
    self.token = Some(token);
  }

  pub fn with_token(mut self, token: String) -> ModelsEAccount {
    self.token = Some(token);
    self
  }

  pub fn token(&self) -> Option<&String> {
    self.token.as_ref()
  }

  pub fn reset_token(&mut self) {
    self.token = None;
  }

  pub fn set_uid(&mut self, uid: String) {
    self.uid = Some(uid);
  }

  pub fn with_uid(mut self, uid: String) -> ModelsEAccount {
    self.uid = Some(uid);
    self
  }

  pub fn uid(&self) -> Option<&String> {
    self.uid.as_ref()
  }

  pub fn reset_uid(&mut self) {
    self.uid = None;
  }

}



