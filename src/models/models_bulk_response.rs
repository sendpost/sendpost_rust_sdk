/* 
 * SendPost API
 *
 * SendPost API to send transactional emails reliably
 *
 * OpenAPI spec version: 1.0.0
 * Contact: hello@sendx.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ModelsBulkResponse {
  #[serde(rename = "jobId")]
  job_id: Option<i64>,
  #[serde(rename = "message")]
  message: Option<String>
}

impl ModelsBulkResponse {
  pub fn new() -> ModelsBulkResponse {
    ModelsBulkResponse {
      job_id: None,
      message: None
    }
  }

  pub fn set_job_id(&mut self, job_id: i64) {
    self.job_id = Some(job_id);
  }

  pub fn with_job_id(mut self, job_id: i64) -> ModelsBulkResponse {
    self.job_id = Some(job_id);
    self
  }

  pub fn job_id(&self) -> Option<&i64> {
    self.job_id.as_ref()
  }

  pub fn reset_job_id(&mut self) {
    self.job_id = None;
  }

  pub fn set_message(&mut self, message: String) {
    self.message = Some(message);
  }

  pub fn with_message(mut self, message: String) -> ModelsBulkResponse {
    self.message = Some(message);
    self
  }

  pub fn message(&self) -> Option<&String> {
    self.message.as_ref()
  }

  pub fn reset_message(&mut self) {
    self.message = None;
  }

}



